---
layout:     post
title:      NOVA (Internship)
author:     Haibin
tags: 		Android Web Firebase
subtitle:  	Software developer intern in Summer 2017
category:  projects
---
## Introduction
This is a demo project showcasing my work as a software developer intern.  
The most challenging part is described at the bottom, and all the following features were developed by me.

The goal was to build an Android app for patients and a web server for doctors. The system provides these functions:  
1. Doctors can set medicine reminders for their patients  
2. Patients can schedule appointments with their doctors  
3. Patients can retrieve vital data (e.g., blood pressure) from iHealth products  


## Medicine Reminder
Doctors can add and modify medicine reminders. The Android app updates from the online database and sets reminder alarms automatically.
<div style="text-align:center"><img src= "{{ "/img/projects/nova/medicine.png " | prepend: site.baseurl }}" style="width: 40%; margin-left: 20%; margin-right: 20%;"></div>
<br>

When the reminder alarms, it shows like this first:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/alarmReminder.png " | prepend: site.baseurl }}" style="width: 60%; margin-left: 20%; margin-right: 20%;"></div>
<br>

After users click "OK", the app enters the medicine detail screen, which looks like this:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/alarmIn.png " | prepend: site.baseurl }}" style="width: 40%; margin-left: 20%; margin-right: 20%;"></div>
<br>
The alarming medicine's button is red to remind users which medication should be taken. After users click the red button, it becomes grey, indicating the medicine has been taken:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/alarmAfter.png " | prepend: site.baseurl }}" style="width: 40%; margin-left: 20%; margin-right: 20%;"></div>
<br>
When another reminder alarms, the same process executes again, but the previous status is recorded:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/alarmRe.png " | prepend: site.baseurl }}" style="width: 20%; margin-left: 20%; margin-right: 20%;"></div>
<div style="text-align:center"><img src= "{{ "/img/projects/nova/alarmReAfter.png " | prepend: site.baseurl }}" style="width: 20%; margin-left: 20%; margin-right: 20%;"></div>
<br>


This approach allows us to track whether patients have taken their medicine on time and display this information on the web server.
<div style="text-align:center"><img src= "{{ "/img/projects/nova/medicine_status.png " | prepend: site.baseurl }}" style="width: 100%; "></div>
<br>
The "Y" indicates that the patient has taken their medicine. 
While this interface isn't visually polished, it's designed for healthcare professionals where functionality takes priority over aesthetics.  

## Appointment
In the appointment section, patients can view their doctor's available times and schedule appointments. When they enter "Appointment", the doctor's available times are displayed first:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/appointmentInit.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>
Patients cannot schedule appointments during their doctor's unavailable times.


A confirmation dialog appears after long-pressing a time slot.
<div style="text-align:center"><img src= "{{ "/img/projects/nova/appointment.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>

You can cancel an appointment by long-pressing on it.
<div style="text-align:center"><img src= "{{ "/img/projects/nova/appointmentCancel.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>

You cannot book time slots already reserved by other patients. These unavailable slots are marked as "occupied":
<div style="text-align:center"><img src= "{{ "/img/projects/nova/occupied.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>

This is the doctor's appointment view:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/appointmentDoctor.png " | prepend: site.baseurl }}" style="width: 100%; "></div>
<br>

## Vital data
By connecting iHealth products, we can help patients retrieve their vital data.
<div style="text-align:center"><img src= "{{ "/img/projects/nova/ihealth.png " | prepend: site.baseurl }}" style="width: 40%; "></div>
<br>

## The most challenging part
The first design version is:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/reminder_old.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>
This was easy to implement, as the database table structure directly matched the display columns.  
And the second version is:
<div style="text-align:center"><img src= "{{ "/img/projects/nova/reminder_new.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>
Only today's medicine reminders are shown.  
Management required that medications should be reminded at specific intervals (e.g., every two days) rather than on specific weekdays.  

This was challenging to implement because the database couldn't query today's reminders directly.  

#### The basic approach: set a start date and reminder period  
When users enter the medicine reminder section, the database retrieves all data and calculates whether each reminder should be displayed.  
This approach is inefficient because it requires extensive processing outside the database. Since we're using an online database, this creates significant data transfer costs. The database should provide only the needed items directly.   

#### The second approach: set next reminder date and update after display  
This approach saves data traffic by querying only needed data rather than everything. However, it still requires database writes every time the data is accessed.  

#### Finally, I designed a distributed database solution
The online database stores only the start date and period. When doctors add or update medicine reminders, the local database receives this signal and computes all reminder dates, inserting each as a single record in the local database.  

- Just like 
<pre><code class="language-java">// online database
name:medicineA 		startDate:2017/10/12 	period:2 	duration:1week	

// local database should look like
name:medicineA 		remindDate:2017/10/12
name:medicineA 		remindDate:2017/10/14
name:medicineA 		remindDate:2017/10/16
name:medicineA 		remindDate:2017/10/18
</code></pre>
This approach allows us to get results directly without updating the database on every query. The online database stores only essential data such as user information. 

This design maximizes the use of local computing and storage resources, reducing data traffic and server costs. This approach makes the system more scalable.

## Summary

This is the main screen of the Android app (this component was developed by other team members):
<div style="text-align:center"><img src= "{{ "/img/projects/nova/main.png " | prepend: site.baseurl }}" style="width: 60%; "></div>
<br>

I developed the following features: medicine reminders, appointments, user login, sign up, emergency call, healthcare records access, and vital measurements.

The medicine reminders and appointments were the major components, while the others were more straightforward to implement.
