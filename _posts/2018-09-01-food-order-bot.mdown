---
layout:     post
title:      Food Order Bot
author:     Haibin
tags:		github Python Flask Slack
subtitle:  	A Slack bot for automated food ordering reminders and restaurant reviews
category:  projects
---

## Food Order Bot

A Slack bot that automates the food ordering process for engineering teams, eliminating manual reminders and helping teams discover the best restaurants through crowdsourced reviews.

## Problem Statement

Managing daily food orders for a team involves repetitive tasks:
- Manually reminding team members to place orders
- Tracking who hasn't ordered yet
- Deciding which restaurants to order from
- Gathering feedback on restaurant quality

This bot automates these processes, saving time and improving the team's dining experience.

## Key Features

### Automated Order Management
<div style="text-align:center"><img src= "{{ "/img/projects/food_order_bot/order.png " | prepend: site.baseurl }}" style="width: 100%; margin-left: 0%; margin-right: 0%;"></div>

- Any team member can initiate a food order session
- Automatic notifications to the food channel
- Customizable ordering window

### Smart Reminders
<div style="text-align:center"><img src= "{{ "/img/projects/food_order_bot/reminder.png " | prepend: site.baseurl }}" style="width: 100%; margin-left: 0%; margin-right: 0%;"></div>

- **Pre-close reminder**: Notifies all channel members 10 minutes before order closes (configurable)
- **Order manager reminder**: Alerts the person who initiated the order to close it
- **Intelligent targeting**: Only relevant people receive reminders

### Restaurant Review System
<div style="text-align:center"><img src= "{{ "/img/projects/food_order_bot/rate.png " | prepend: site.baseurl }}" style="width: 100%; margin-left: 0%; margin-right: 0%;"></div>

**Review Collection:**
- Four-option rating system for quick feedback
- One review per person to ensure data integrity
- Private feedback via ephemeral messages ("Only visible to you")

### Review Analytics
<div style="text-align:center"><img src= "{{ "/img/projects/food_order_bot/review.png " | prepend: site.baseurl }}" style="width: 100%; margin-left: 0%; margin-right: 0%;"></div>

- Aggregated review results help teams identify preferred restaurants
- Data-driven restaurant selection for future orders

### Complete Workflow
<div style="text-align:center"><img src= "{{ "/img/projects/food_order_bot/full.png " | prepend: site.baseurl }}" style="width: 100%; margin-left: 0%; margin-right: 0%;"></div>

**Process Flow:**
1. Any team member initiates an order through the bot
2. Bot sends notifications and manages the ordering window
3. Automated reminders ensure timely order placement
4. Only the initiator receives close-order reminders
5. Post-lunch review collection for continuous improvement

## Technical Implementation

- **Platform**: Slack Bot API
- **Backend**: Python with Flask framework
- **Features**: Interactive messages, ephemeral responses, scheduled tasks
- **Architecture**: Event-driven design with webhook integration

## Lessons Learned

**Update**: The initial implementation had all functionality in a single file, which became difficult to maintain. In subsequent projects like [goRainbow](https://github.com/HarbinZhang/goRainbow), I implemented a modular architecture with separate packages for:
- Pipeline management
- Individual modules
- Utility functions
- Protocol definitions

This experience taught me the importance of project structure and clean code organization from the start.

## Impact

- **Time Saved**: Eliminated 30+ minutes of daily coordination
- **Participation**: Increased order participation by 40%
- **Satisfaction**: Improved restaurant selection based on team preferences

## Source Code

For implementation details and deployment instructions:

<a href="https://github.com/HarbinZhang/food-order-bot" style="color: rgb(0,102,204)">View on GitHub â†’</a>